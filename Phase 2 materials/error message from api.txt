displaying books if available and displaying error message from the API otherwise
------------------------------------------------------------------------------------------


<div *ngIf="errorMessage; else booksTable">
  <p>{{ errorMessage }}</p>
</div>
<ng-template #booksTable>
 <table class="table">
    <thead>
      <tr>
        <th scope="col">Id</th>
        <th scope="col">Name</th>
        <th scope="col">Type</th>
        <th scope="col">Available</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let book of books">
        <th scope="row">{{book.id}}</th>
        <td>{{book.name}}</td>
        <td>{{book.type}}</td>
        <td>{{book.Available}}</td>
      </tr>
    </tbody>
  </table>
</ng-template>


import { Component } from '@angular/core';
import { BookService } from '../book.service';

@Component({
  selector: 'app-getbooks',
  templateUrl: './getbooks.component.html',
  styleUrls: ['./getbooks.component.css']
})
export class GetbooksComponent {
  public books: any[] = []; 
  public errorMessage: string = '';

  constructor(private service: BookService) { }

  ngOnInit(): void {
    this.getBooks();
  }

  private getBooks(): void {
    this.service.getBooks().subscribe(
      result => {
        this.books = result;
        this.errorMessage = ''; // Clear error message if books are found
      },
      error => {
        this.books = []; // Clear books in case of an error
        this.errorMessage = error.error.message ; // Use API error message
      }
    );
  }
}



import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http'
import { Observable } from 'rxjs'

@Injectable({
  providedIn: 'root'
})
export class BookService {

  private basepath = " https://simple-books-api.glitch.me";

  constructor(private http:HttpClient) { }

  public getBooks():Observable<any>
  {
    var path = this.basepath + "/books";
    console.log(path)
    return this.http.get(path);
  }
}


